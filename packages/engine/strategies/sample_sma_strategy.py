#!/usr/bin/env python3
"""
Sample SMA Strategy
Generated by NSE Backtesting Engine
"""

import pandas as pd
import numpy as np
from zipline.api import symbol, order_target_percent, record
from engine.enhanced_base_strategy import BaseStrategy

class SampleSMAStrategy(BaseStrategy):
    def __init__(self, short_window=5, long_window=20):
        super().__init__()
        self.short_window = short_window
        self.long_window = long_window

        self.risk_params.update({
            'max_position_size': 0.15,
            'stop_loss_pct': 0.08,
        })

    def select_universe(self, context):
        return [symbol('SBIN'), symbol('RELIANCE')]

    def generate_signals(self, context, data):
        signals = {}
        for asset in context.universe:
            try:
                prices = data.history(asset, 'price', self.long_window + 1, '1d')
                if len(prices) >= self.long_window:
                    short_ma = prices.tail(self.short_window).mean()
                    long_ma = prices.tail(self.long_window).mean()

                    if short_ma > long_ma:
                        signals[asset] = 1.0
                    else:
                        signals[asset] = -1.0
                else:
                    signals[asset] = 0.0
            except Exception:
                signals[asset] = 0.0
        return signals
